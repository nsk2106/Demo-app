{"version":3,"sources":["AppBar.tsx","MyField.tsx","MyForm.tsx","MyTable.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","classes","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","Button","MyField","placeholder","field","TextField","MyForm","onSubmit","initialValues","firstName","lastName","email","values","resetForm","name","component","type","MyTable","rows","Paper","Table","TableHead","TableRow","TableCell","TableBody","map","row","id","require","App","useState","setRows","style","textAlign","data","currentRows","generate","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.34e28b1f.chunk.js","sourcesContent":["import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }),\n);\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Form \n          </Typography>\n          <Button color=\"inherit\">Login</Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { FieldProps } from \"formik\";\nimport { TextField } from \"@material-ui/core\";\nimport { TextFieldProps } from \"@material-ui/core/TextField/TextField\";\n\nexport const MyField: React.FC<FieldProps & TextFieldProps> = ({\n  placeholder,\n  field\n}) => {\n  return <TextField placeholder={placeholder} {...field} />;\n};","import { Button, TextField } from \"@material-ui/core\";\nimport { Form, Formik, Field } from \"formik\";\nimport * as React from \"react\";\nimport { MyField } from \"./MyField\";\n\ninterface Values {\n  firstName: string;\n  lastName: string;\n  email: string;\n}\n\ninterface Props {\n  onSubmit: (values: Values) => void;\n}\n\nexport const MyForm: React.FC<Props> = ({ onSubmit }) => {\n  return (\n    <Formik\n      initialValues={{ firstName: \"\", lastName: \"\", email: \"\" }}\n      onSubmit={(values, { resetForm }) => {\n        onSubmit(values);\n        resetForm();\n      }}\n    >\n      {({ values }) => (\n        <Form>\n          <div>\n            <Field\n              name=\"firstName\"\n              placeholder=\"first name\"\n              component={MyField}\n            />\n          </div>\n          <div>\n            <Field\n              name=\"lastName\"\n              placeholder=\"last name\"\n              component={MyField}\n            />\n          </div>\n          <div>\n            <Field name=\"email\" placeholder=\"email\" component={MyField} />\n          </div>\n          <Button type=\"submit\">submit</Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\ninterface Props {\n  rows: Array<{\n    id: string;\n    firstName: string;\n    lastName: string;\n    email: string;\n  }>;\n}\n\nexport function MyTable({ rows }: Props) {\n  return (\n    <Paper>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Id</TableCell>\n            <TableCell>First Name</TableCell>\n            <TableCell>Last Name</TableCell>\n            <TableCell>Email</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow key={row.id}>\n              <TableCell>{row.id}</TableCell>\n              <TableCell>{row.firstName}</TableCell>\n              <TableCell>{row.lastName}</TableCell>\n              <TableCell>{row.email}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n}","import React, { useState } from \"react\";\nimport  ButtonAppBar from './AppBar'\nimport { MyForm } from \"./MyForm\";\nimport { MyTable } from \"./MyTable\";\nconst id = require ('short-id');\nconst App = () => {\n  const [rows, setRows] = useState([\n    {\n      id: \"45\",\n      firstName: \"bob\",\n      lastName: \"bob2\",\n      email: \"bob@bob.com\"\n    }\n  ]);\n\n  return (\n\n    <div style={{ textAlign: \"center\" }}>\n      <ButtonAppBar />\n      <MyForm\n        onSubmit={data => {\n          setRows(currentRows => [\n            {\n              id: id.generate(),\n              ...data\n            },\n            ...currentRows\n          ]);\n        }}\n      />\n      <MyTable rows={rows} />\n    </div>\n  );\n};\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}